From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Mon, 16 Sep 2024 04:44:19 +0200
Subject: [PATCH] linear


diff --git a/src/main/java/abomination/LinearManager.java b/src/main/java/abomination/LinearManager.java
index 3f5eed124e453dce2f4d39a62cd96e38aa2faec5..70c5953a3a6905d42ed0963de6fa3fc6d7a28ad0 100644
--- a/src/main/java/abomination/LinearManager.java
+++ b/src/main/java/abomination/LinearManager.java
@@ -47,22 +47,32 @@ public class LinearManager extends Thread {
         }
     }
 
+    long lastReport = 0;
+    int toFlushCount = 0;
+    int removedCount = 0;
+
     public void run() {
         while (!close) {
             synchronized(regionCache) {
                 long timestamp = System.currentTimeMillis();
+
+                if (timestamp - lastReport > 60000 && abomination.config.UnsupportedWipOptionsWillChange.linearVerbose)
+                    LOGGER.info("regionCache: " + regionCache.size() + " toFlush: " + toFlush.size() + " toFlushCount: " + toFlushCount + " removedCount: " + removedCount);
+
                 for (int i = 0 ; i < regionCache.size() ; i++) {
                     LinearRegionFile file = regionCache.get(i);
                     if (file.close) {
                         if (abomination.config.UnsupportedWipOptionsWillChange.linearVerbose)
                             LOGGER.info("Region file marking to remove " + file + " lastRead: " + ((timestamp - file.lastRead) / 1000.) + " lastWrite: " + ((timestamp - file.lastWrite) / 1000.) + " lastFlush: " + ((timestamp - file.lastFlush) / 1000.));
                         regionCache.remove(i);
+                        removedCount++;
                     } else {
                         try {
                             if (file.markedToSave && ((timestamp - file.lastWrite) / 1000. > SAVE_INTERVAL || (timestamp - file.lastFlush) / 1000. > FLUSH_INTERVAL)) {
                                 if (abomination.config.UnsupportedWipOptionsWillChange.linearVerbose)
                                     LOGGER.info("Region file marking to save " + file + " lastRead: " + ((timestamp - file.lastRead) / 1000.) + " lastWrite: " + ((timestamp - file.lastWrite) / 1000.) + " lastFlush: " + ((timestamp - file.lastFlush) / 1000.));
                                 toFlush.add(file);
+                                toFlushCount++;
                             }
                         } catch(IllegalStateException ex) {
                             LOGGER.info("Linear is too slow for this machine! Backlog full!");
