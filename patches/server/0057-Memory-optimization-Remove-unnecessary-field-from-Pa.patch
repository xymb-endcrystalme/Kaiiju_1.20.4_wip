From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Tue, 17 Sep 2024 04:35:42 +0200
Subject: [PATCH] Memory optimization: Remove unnecessary field from
 PalettedContainer.

859MB->852M

diff --git a/src/main/java/net/minecraft/world/level/chunk/PalettedContainer.java b/src/main/java/net/minecraft/world/level/chunk/PalettedContainer.java
index 6d3b5ec2d4f28d68ee24b0abaef11d4c55ef6926..e24f3bbf8508c653660bf2185cd9e84c3b3665a4 100644
--- a/src/main/java/net/minecraft/world/level/chunk/PalettedContainer.java
+++ b/src/main/java/net/minecraft/world/level/chunk/PalettedContainer.java
@@ -26,7 +26,6 @@ import net.minecraft.util.ZeroBitStorage;
 
 public class PalettedContainer<T> implements PaletteResize<T>, PalettedContainerRO<T> {
     private static final int MIN_PALETTE_BITS = 0;
-    private final PaletteResize<T> dummyPaletteResize = (newSize, added) -> 0;
     public final IdMap<T> registry;
     private final T @org.jetbrains.annotations.Nullable [] presetValues; // Paper - Anti-Xray - Add preset values
     public volatile PalettedContainer.Data<T> data; // Paper - optimise collisions - public
@@ -306,7 +305,8 @@ public class PalettedContainer<T> implements PaletteResize<T>, PalettedContainer
 
         PalettedContainerRO.PackedData var12;
         try {
-            HashMapPalette<T> hashMapPalette = new HashMapPalette<>(idList, this.data.storage.getBits(), this.dummyPaletteResize);
+            final PaletteResize<T> dummyPaletteResize = (newSize, added) -> 0; // Abomination - optimize memory
+            HashMapPalette<T> hashMapPalette = new HashMapPalette<>(idList, this.data.storage.getBits(), dummyPaletteResize); // Abomination
             int i = paletteProvider.size();
             int[] is = new int[i];
             this.data.storage.unpack(is);
