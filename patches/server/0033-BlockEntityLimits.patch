From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Tue, 10 Sep 2024 13:49:35 +0200
Subject: [PATCH] BlockEntityLimits


diff --git a/src/main/java/abomination/BlockEntityLimiter.java b/src/main/java/abomination/BlockEntityLimiter.java
index da1b9fed100d9ef2f46223eeb56a898d0b5bdfa9..ba31553ee3a50a06b96eaa743e1296fde9b4e16c 100644
--- a/src/main/java/abomination/BlockEntityLimiter.java
+++ b/src/main/java/abomination/BlockEntityLimiter.java
@@ -7,6 +7,8 @@ import net.minecraft.world.level.chunk.LevelChunk;
 import org.bukkit.Material;
 import net.md_5.bungee.api.ChatColor;
 import net.minecraft.world.level.block.entity.*;
+import net.minecraft.world.level.block.*;
+import net.minecraft.world.level.chunk.ChunkAccess;
 
 import abomination.config.UnsupportedWipOptionsWillChange.BlockEntityLimits;
 
@@ -14,15 +16,7 @@ public class BlockEntityLimiter {
 
     public static boolean limitBlockEntities(BlockPlaceEvent event) {
         if (BlockEntityLimits.enabled == false) return true;
-/*        
-        if (KaiijuConfig.blockEntityLimitsTotal <= 0 && KaiijuConfig.blockEntityLimitsEnchantingTable <= 0 && KaiijuConfig.blockEntityLimitsCampfire <= 0 && KaiijuConfig.blockEntityLimitsSpawner <= 0 &&
-            KaiijuConfig.blockEntityLimitsPlayerHead <= 0 && KaiijuConfig.blockEntityLimitsChest <= 0 && KaiijuConfig.blockEntityLimitsShulker <= 0 && KaiijuConfig.blockEntityLimitsEnderChest <= 0 &&
-            KaiijuConfig.blockEntityLimitsLecterns <= 0 && KaiijuConfig.blockEntityLimitsBeacon <= 0 && KaiijuConfig.blockEntityLimitsBrewingStand <= 0 && KaiijuConfig.blockEntityLimitsBanner <= 0 &&
-            KaiijuConfig.blockEntityLimitsBell <= 0) return true;
 
-        Chunk chunkBukkit = event.getBlock().getChunk();
-        CraftChunk chunkAccess = (CraftChunk)chunkBukkit;
-        LevelChunk chunk = chunkAccess.getHandle();
         Material material = event.getBlock().getType();
 
         boolean blockEntity = false;
@@ -34,28 +28,32 @@ public class BlockEntityLimiter {
 
         if (!blockEntity) return true;
 
-        int blockEntitiesTotal = chunk.getBlockEntities().size();
+        Chunk chunkBukkit = event.getBlock().getChunk();
+        CraftChunk chunkAccess = (CraftChunk)chunkBukkit;
+        ChunkAccess chunk = chunkAccess.getHandle(net.minecraft.world.level.chunk.status.ChunkStatus.FULL);
+
+        int blockEntitiesTotal = chunk.blockEntities.size();
 
-        if (blockEntitiesTotal > KaiijuConfig.blockEntityLimitsTotal) {
-            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of tile entities " + (blockEntitiesTotal - 1) + "/" + KaiijuConfig.blockEntityLimitsTotal));
+        if (blockEntitiesTotal > BlockEntityLimits.total) {
+            event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of tile entities " + (blockEntitiesTotal - 1) + "/" + BlockEntityLimits.total));
             event.setCancelled(true);
             return false;
         }
 
         int count = 0;
-        int limit = KaiijuConfig.blockEntityLimitsEnchantingTable;
+        int limit = BlockEntityLimits.limitEnchantingTable;
         if (limit > 0 && material == Material.ENCHANTING_TABLE) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
-                if (ent instanceof EnchantmentTableBlockEntity) count++;
+            for (BlockEntity ent : chunk.blockEntities.values())
+                if (ent instanceof EnchantingTableBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of enchanting tables " + (count - 1) + "/" + limit));
                 event.setCancelled(true);
                 return false;
             }
         }
-        limit = KaiijuConfig.blockEntityLimitsCampfire;
+        limit = BlockEntityLimits.limitCampfire;
         if (limit > 0 && (material == Material.CAMPFIRE || material == Material.SOUL_CAMPFIRE)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values()) {
+            for (BlockEntity ent : chunk.blockEntities.values()) {
                 if (ent instanceof CampfireBlockEntity) count++;
             }
             if (count > limit) {
@@ -64,9 +62,11 @@ public class BlockEntityLimiter {
                 return false;
             }
         }
+        return true;
+/*
         limit = KaiijuConfig.blockEntityLimitsPlayerHead;
         if (limit > 0 && (material == Material.PLAYER_HEAD || material == Material.ZOMBIE_HEAD || material == Material.CREEPER_HEAD || material == Material.DRAGON_HEAD || material == Material.PIGLIN_HEAD)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof SkullBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of heads " + (count - 1) + "/" + limit));
@@ -76,7 +76,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsChest;
         if (limit > 0 && (material == Material.CHEST || material == Material.TRAPPED_CHEST || material == Material.BARREL)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof ChestBlockEntity || ent instanceof BarrelBlockEntity || ent instanceof TrappedChestBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of chests " + (count - 1) + "/" + limit));
@@ -86,7 +86,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsShulker;
         if (limit > 0 && (org.bukkit.Tag.SHULKER_BOXES.getValues().contains(material))) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof ShulkerBoxBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of shulkers " + (count - 1) + "/" + limit));
@@ -96,7 +96,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsEnderChest;
         if (limit > 0 && (material == Material.ENDER_CHEST)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof EnderChestBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of ender chests " + (count - 1) + "/" + limit));
@@ -106,7 +106,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsLecterns;
         if (limit > 0 && (material == Material.LECTERN)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof LecternBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of lecterns " + (count - 1) + "/" + limit));
@@ -116,7 +116,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsBeacon;
         if (limit > 0 && (material == Material.BEACON)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof BeaconBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of beacons " + (count - 1) + "/" + limit));
@@ -126,7 +126,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsBrewingStand;
         if (limit > 0 && (material == Material.BREWING_STAND)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof BrewingStandBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of brewing stands " + (count - 1) + "/" + limit));
@@ -136,7 +136,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsBanner;
         if (limit > 0 && (org.bukkit.Tag.BANNERS.getValues().contains(material))) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof BannerBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of banners " + (count - 1) + "/" + limit));
@@ -146,7 +146,7 @@ public class BlockEntityLimiter {
         }
         limit = KaiijuConfig.blockEntityLimitsBell;
         if (limit > 0 && (material == Material.BELL)) {
-            for (BlockEntity ent : chunk.getBlockEntities().values())
+            for (BlockEntity ent : chunk.blockEntities.values())
                 if (ent instanceof BellBlockEntity) count++;
             if (count > limit) {
                 event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', "Reached the limit of bells " + (count - 1) + "/" + limit));
